#:import CG CG.CG
#:import Parser Parser.Parser
#:import Computation Computation.Computation
#:import Factory kivy.factory.Factory
#:import ObjectProperty kivy.properties.ObjectProperty
#:import StringProperty kivy.properties.StringProperty
#:import ListProperty kivy.properties.ListProperty
#:import tabulate tabulate.tabulate



WindowManager:
    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            size: self.size
            pos: self.pos
    StartWindow:
    GettingStartedWindow:
    CGWindow:
    SAPDAWindow:
    CGTutorialWindow:
    SAPDATutorialWindow:
    ChooseCGWindow:
    ChooseSAPDAWindow:
    MakeCGWindow:
    MakeSAPDAWindow:
    ChooseCGActionWindow:
    ChooseSAPDAActionWindow:
    CYKParseWindow:
    GenerateParseWindow:
    ConvertCGToSAPDAWindow:


<RoundedButton@Button>:
    id: rounded_button
    background_normal: ''
    background_color: (0,0,0,0)
    size_hint: (.8, .4)
    pos_hint: {'center_x': 0.5}
    markup: True
    font_name: "DejaVuSans.ttf"
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [50]

<ReturnStartButton@Button>:
    id: start
    background_normal: ''
    background_color: (0,0,0,0)
    text: "Return to start"
    font_name: "DejaVuSans.ttf"
    font_size: start.height*0.26
    pos_hint: {"x": 0.83, "top": 1}
    size_hint: (.15, .1)
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40]

    on_press:
        my_cg = ObjectProperty(None)
        my_bnf_cg = ObjectProperty(None)
        my_parser = ObjectProperty(None)
        my_derivation = ListProperty(None)
        input_string = StringProperty(None)
        my_sapda = ObjectProperty(None)
        my_computation = ListProperty(None)

<BackButton@Button>:
    id: back
    background_normal: ''
    background_color: (0,0,0,0)
    text: "Back"
    font_name: "DejaVuSans.ttf"
    font_size: back.height*0.26
    pos_hint: {"x": 0.02, "top": 1}
    size_hint: (.15, .1)
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40]


<PrevTutorialButton@Button>:
    id: back
    background_normal: ''
    background_color: (0,0,0,0)
    text: "« Previous"
    font_name: "DejaVuSans.ttf"
    font_size: back.height*0.26
    pos_hint: {"x": 0.22, "top": 0.2}
    size_hint: (.15, .1)
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40]


<NextTutorialButton@Button>:
    id: next
    background_normal: ''
    background_color: (0,0,0,0)
    font_name: "DejaVuSans.ttf"
    text: "Next »"
    font_size: next.height*0.26
    pos_hint: {"x": 0.62, "top": 0.2}
    size_hint: (.15, .1)
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40]

<TutorialPageLabel@Label>:
    id: page
    background_normal: ''
    background_color: (0,0,0,0)
    font_name: "DejaVuSans.ttf"
    font_size: page.height*0.26
    pos_hint: {"x": 0.42, "top": 0.2}
    size_hint: (.15, .1)
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40]


<RoundedLabel@Label>:
    id: rounded_label
    background_normal: ''
    background_color: (0,0,0,0)
    markup: True
    font_name: "DejaVuSans.ttf"
    size_hint: (.8, None)
    #text_size: root.width, None
    size: self.texture_size
    pos_hint: {'center_x': 0.5}
    padding:[30,20]
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [50]


<DerivationLabel@Label>:
    background_normal: ''
    background_color: (0,0,0,0)
    markup: True
    font_name: 'FreeMono.ttf'
    size: self.texture_size
    pos_hint: {'center_x': 0.5}
    padding:[30,30]
    canvas.before:
        Color:
            rgba: (48/255, 84/255, 150/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [50]



<StartWindow>:
    name: "start"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        spacing:100
        padding:70

        Label:
            id: main_label
            text: "Conjunctive Grammar & SAPDA Machine"
            font_size: main_label.height*0.18

        RoundedButton:
            text: "Getting Started"
            font_size: main_button.height*0.42
            on_release:
                app.root.current = "getting_started"
                root.manager.transition.direction = "left"

        RoundedButton:
            id: main_button
            text: "Conjunctive Grammars"
            font_size: main_button.height*0.42
            on_release:
                app.root.current = "cg"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "SAPDA"
            font_size: main_button.height*0.42
            on_release:
                app.root.current = "sapda"
                root.manager.transition.direction = "left"






<GettingStartedWindow>:
    name: "getting_started"
    spacing:20
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        Label:
            id: getting_started_label
            text: "Getting Started"
            font_size: getting_started_label.height*0.48
            pos_hint: {"center_x": 0.5, "top": 0.95}
            size_hint: (.15, .1)

    ScrollView:
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                id: start_label
                text: app.getting_started_txt
                markup: True
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1]
                pos_hint: {'x':0.1 , 'top':.85}





<CGWindow>:
    name: "cg"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"


    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        spacing:100
        padding:50

        Label:
            id: cg_label
            text: "Conjunctive Grammars"
            font_size: cg_label.height*0.18

        RoundedButton:
            id: cg_button
            text: "Tutorial"
            font_size: cg_button.height*0.42
            on_release:
                app.root.current = "cg_tutorial"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "Choose an example grammar"
            font_size: cg_button.height*0.42
            on_release:
                app.root.current = "choose_cg"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "Make your own grammar"
            font_size: cg_button.height*0.42
            on_release:
                app.root.current = "make_cg"
                root.manager.transition.direction = "left"



<SAPDAWindow>:
    name: "sapda"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        spacing:100
        padding:50

        Label:
            id: sapda_label
            text: "SAPDA"
            font_size: sapda_label.height*0.18

        RoundedButton:
            id: sapda_button
            text: "Tutorial"
            font_size: sapda_button.height*0.42
            on_release:
                app.root.current = "sapda_tutorial"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "Choose an example SAPDA"
            font_size: sapda_button.height*0.42
            on_release:
                app.root.current = "choose_sapda"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "Make your own SAPDA"
            font_size: sapda_button.height*0.42
            on_release:
                app.root.current = "make_sapda"
                root.manager.transition.direction = "left"



<ChooseCGWindow>:
    name: "choose_cg"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "cg"
                root.manager.transition.direction = "right"


    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        spacing:100
        padding:50

        Label:
            id: choose_cg_label
            text: "Choose an example grammar"
            font_name: "DejaVuSans.ttf"
            font_size: choose_cg_label.height*0.18

        RoundedButton:
            id: choose_cg_button
            text: app.cg1.name
            font_size: choose_cg_button.height*0.32
            on_release:
                app.my_cg = app.cg1
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: app.cg2.name
            font_size: choose_cg_button.height*0.32
            on_release:
                app.my_cg = app.cg2
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: app.cg3.name
            font_size: choose_cg_button.height*0.32
            on_release:
                app.my_cg = app.cg3
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: app.cg4.name
            font_size: choose_cg_button.height*0.32
            on_release:
                app.my_cg = app.cg4
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "left"



<ChooseSAPDAWindow>:
    name: "choose_sapda"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "sapda"
                root.manager.transition.direction = "right"

    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        spacing:100
        padding:50

        Label:
            id: choose_sapda_label
            text: "Choose an example SAPDA"
            font_size: choose_sapda_label.height*0.18

        RoundedButton:
            id: choose_sapda_button
            text: app.sapda1.name
            font_size: choose_sapda_button.height*0.24
            on_release:
                app.my_sapda = app.sapda1
                app.root.current = "choose_sapda_action"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: app.sapda2.name
            font_size: choose_sapda_button.height*0.24
            on_release:
                app.my_sapda = app.sapda2
                app.root.current = "choose_sapda_action"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: app.sapda3.name
            font_size: choose_sapda_button.height*0.24
            on_release:
                app.my_sapda = app.sapda3
                app.root.current = "choose_sapda_action"
                root.manager.transition.direction = "left"




<MakeCGWindow>:
    name: "make_cg"
    id: make_cg

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:

        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "cg"
                root.manager.transition.direction = "right"

        Label:
            id: make_cg_label
            text: 'Make a conjunctive grammar'
            pos_hint: {'center_x':0.5 , 'y':0.87}
            size_hint: (.35, .10)
            halign: 'center'
            font_name: "DejaVuSans.ttf"
            font_size: make_cg_label.height*0.38

        RoundedLabel:
            id: make_cg_help
            size_hint: 0.5, 0.6
            pos_hint: {'x':0.1 , 'top':.82}
            text: app.make_cg_txt
            markup: True
            text_size: self.width, None
            size: self.texture_size
            font_size: make_cg_help.height*0.04


        ScrollView:
            id: scroll_view
            size_hint_y: .60
            pos_hint: {'x':0 , 'y':.25}
            do_scroll_x: False
            do_scroll_y: True


            GridLayout:

                size: root.width, root.height
                size_hint_x: None
                size_hint_y: None
                cols: 2
                spacing:40
                padding:40

                Widget:

                CGTextInput:
                    id: grammar_rules
                    font_name: "DejaVuSans.ttf"
                    text: ''
                    size_hint: 0.5, 0.5
                    #height: max(self.minimum_height, scroll_view.height)


        RoundedButton:
            id: make_cg_button
            text: "Make grammar"
            font_size: make_cg_button.height*0.42
            pos_hint: {'center_x':0.5 , 'y':.05}
            size_hint: (.35, .10)
            width: self.texture_size[0]
            on_release:
                if grammar_rules.is_valid_cg_input(grammar_rules.text): app.my_cg = grammar_rules.make_user_cg(grammar_rules.text); app.root.current = "choose_cg_action"; root.manager.transition.direction = "left"
                else: Factory.MakeCGFail().open()

        RoundedButton:
            id: reset_button
            text: "Reset"
            font_size: reset_button.height*0.52
            pos_hint: {'center_x':0.82 , 'y':.2}
            size_hint: (.1, .04)
            width: self.texture_size[0]
            on_release: grammar_rules.text = ""




<MakeCGFail@Popup>
    spacing:50
    padding:50
    auto_dismiss: True
    size_hint: 0.5, 0.2
    title: "Please input rules in correct format"

<MakeSAPDAFail@Popup>
    spacing:50
    padding:50
    auto_dismiss: True
    size_hint: 0.5, 0.2
    title: "Please input transitions in correct format"


<MakeSAPDAWindow>:
    name: "make_sapda"

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:

        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "sapda"
                root.manager.transition.direction = "right"

        Label:
            id: make_sapda_label
            text: 'Make a SAPDA'
            pos_hint: {'center_x':0.5 , 'y':0.87}
            size_hint: (.35, .10)
            halign: 'center'
            font_name: "DejaVuSans.ttf"
            font_size: make_sapda_label.height*0.38

        RoundedLabel:
            id: make_sapda_help
            size_hint: 0.5, 0.6
            pos_hint: {'x':0.1 , 'top':.82}
            text: app.make_sapda_txt
            markup: True
            text_size: self.width, None
            size: self.texture_size
            font_size: make_sapda_help.height*0.04

        ScrollView:
            id: scroll_view
            size_hint_y: .60
            pos_hint: {'x':0 , 'y':.25}
            do_scroll_x: False
            do_scroll_y: True


            GridLayout:

                size: root.width, root.height
                size_hint_x: None
                size_hint_y: None
                cols: 2
                spacing:40
                padding:40

                Widget:

                SAPDATextInput:
                    id: transitions
                    font_name: "DejaVuSans.ttf"
                    text: "δ(□, □, □) = (□, □)"
                    size_hint: 0.5, 0.5


        RoundedButton:
            id: make_sapda_button
            text: "Make SAPDA"
            font_size: make_sapda_button.height*0.34
            pos_hint: {'center_x':0.5 , 'y':.04}
            size_hint: (.4, .15)
            width: self.texture_size[0]
            on_release:
                if transitions.is_valid_sapda_input(transitions.text): app.my_sapda = transitions.make_user_sapda(transitions.text); app.root.current = "choose_sapda_action"; root.manager.transition.direction = "left"
                else: Factory.MakeSAPDAFail().open()


        RoundedButton:
            id: add_conj_btn
            text: "Add conjunct"
            font_size: add_conj_btn.height*0.52
            pos_hint: {'center_x':0.76 , 'top':.88}
            size_hint: (.17, .04)
            width: self.texture_size[0]
            on_release: transitions.text += " ∧ (□, □)"

        RoundedButton:
            text: "Reset"
            font_size: add_conj_btn.height*0.52
            pos_hint: {"x": 0.88, "top": 0.88}
            size_hint: (.1, .04)
            width: self.texture_size[0]
            on_release: transitions.text = "δ(□, □, □) = (□, □)"


<CGTutorialWindow>:
    name: "cg_tutorial"
    spacing:20
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton:
            on_release:
                app.root.current = "cg"
                root.manager.transition.direction = "right"

        PrevTutorialButton:
            on_release:
                sv.scroll_y = 1
                if current_page.text == "4/4": current_page.text = "3/4" ; cg_tutorial_label.text = "CYK Parsing Algorithm" ; instructions.text = app.cg_tutorial_txt_3
                elif current_page.text == "3/4": current_page.text = "2/4" ; cg_tutorial_label.text = "Derivations with Conjunctive Grammars" ; instructions.text = app.cg_tutorial_txt_2
                elif current_page.text == "2/4": current_page.text = "1/4" ; cg_tutorial_label.text = "Introduction to Conjunctive Grammars" ; instructions.text = app.cg_tutorial_txt_1


        TutorialPageLabel:
            id: current_page
            text: "1/4"

        NextTutorialButton:
            on_release:
                sv.scroll_y = 1
                if current_page.text == "1/4": current_page.text = "2/4" ; cg_tutorial_label.text = "Derivations with Conjunctive Grammars" ; instructions.text = app.cg_tutorial_txt_2
                elif current_page.text == "2/4": current_page.text = "3/4" ; cg_tutorial_label.text = "CYK Parsing Algorithm" ; instructions.text = app.cg_tutorial_txt_3
                elif current_page.text == "3/4": current_page.text = "4/4" ; cg_tutorial_label.text = "Try it yourself!" ; instructions.text = app.cg_tutorial_txt_4




        Label:
            id: cg_tutorial_label
            text: "Introduction to Conjunctive Grammars"
            font_size: cg_tutorial_label.height*0.48
            pos_hint: {"center_x": 0.5, "top": 0.95}
            size_hint: (.15, .1)

    ScrollView:
        id: sv
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            id: gl
            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                id: instructions
                text: app.cg_tutorial_txt_1
                markup: True
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1]
                pos_hint: {'x':0.1 , 'top':.85}




<SAPDATutorialWindow>:
    name: "sapda_tutorial"
    spacing:20
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton:
            on_release:
                app.root.current = "sapda"
                root.manager.transition.direction = "right"

        PrevTutorialButton:
            on_release:
                sv.scroll_y = 1
                if current_page.text == "4/4": current_page.text = "3/4" ; sapda_tutorial_label.text = "Accepting configurations in SAPDA" ; instructions.text = app.sapda_tutorial_txt_3
                elif current_page.text == "3/4": current_page.text = "2/4" ; sapda_tutorial_label.text = "Introduction to SAPDA" ; instructions.text = app.sapda_tutorial_txt_2
                elif current_page.text == "2/4": current_page.text = "1/4" ; sapda_tutorial_label.text = "PDA which accepts by empty stack" ; instructions.text = app.sapda_tutorial_txt_1


        TutorialPageLabel:
            id: current_page
            text: "1/4"

        NextTutorialButton:
            on_release:
                sv.scroll_y = 1
                if current_page.text == "1/4": current_page.text = "2/4" ; sapda_tutorial_label.text = "Introduction to SAPDA" ; instructions.text = app.sapda_tutorial_txt_2
                elif current_page.text == "2/4": current_page.text = "3/4" ; sapda_tutorial_label.text = "Accepting configurations in SAPDA" ; instructions.text = app.sapda_tutorial_txt_3
                elif current_page.text == "3/4": current_page.text = "4/4" ; sapda_tutorial_label.text = "Try it yourself!" ; instructions.text = app.sapda_tutorial_txt_4




        Label:
            id: sapda_tutorial_label
            text: "PDA which accepts by empty stack"
            font_size: sapda_tutorial_label.height*0.48
            pos_hint: {"center_x": 0.5, "top": 0.95}
            size_hint: (.15, .1)

    ScrollView:
        id: sv
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            id: gl
            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                id: instructions
                text: app.sapda_tutorial_txt_1
                markup: True
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1]
                pos_hint: {'x':0.1 , 'top':.85}



<ChooseCGActionWindow>:
    name: "choose_cg_action"
    spacing:20
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                if app.my_cg.user_defined: app.root.current = "make_cg"
                else: app.root.current = "choose_cg"
                root.manager.transition.direction = "right"



        RoundedButton:
            id: cg_action_button
            text: "Apply CYK algorithm for parsing"
            font_size: cg_action_button.height*0.18
            pos_hint: {'x':0.1 , 'y':.05}
            size_hint: (.36, .15)
            width: self.texture_size[0]
            on_release:
                app.my_bnf_cg = app.my_cg.convert_to_BNF()
                app.root.current = "cyk_parse"
                root.manager.transition.direction = "left"

        RoundedButton:
            text: "Convert grammar to equivalent SAPDA"
            font_size: cg_action_button.height*0.18
            pos_hint: {'x':0.5 , 'y':.05}
            size_hint: (.4, .15)
            width: self.texture_size[0]
            on_release:
                app.my_sapda = app.my_cg.convert_to_sapda()
                app.root.current = "convert_cg_to_sapda"
                root.manager.transition.direction = "left"


    ScrollView:
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True


        GridLayout:

            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                id: cg_def_label
                #font_size:
                text: str(app.my_cg)
                pos_hint: {'x':0.1 , 'top':.85}
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1]


<CYKPopup@Popup>
    spacing:50
    padding:50
    auto_dismiss: True
    size_hint: 0.9, 0.9
    title: "Derivation successful!" if app.my_parser.recognise_word() else "Derivation failed!"
    on_dismiss:
        app.my_parser = ObjectProperty(None)

    BoxLayout:

        RecycleView:
            id: rv
            viewclass: 'DerivationLabel'
            data: [{'text': str(x)} for x in app.my_derivation] if app.my_derivation else [{'text': str(x)} for x in range(20)]
            RecycleGridLayout:
                cols: 1
                spacing:40
                padding:10
                size_hint: None, None
                pos_hint: {'top' : 0.95}
                #default_size: None, dp(20)
                #default_size_hint: 1, None
                height: self.minimum_height
                width: self.minimum_width
        Slider:
            size_hint_x: None
            width: root.width*0.1
            id: slider
            min: 0
            max: 1
            orientation: 'vertical'
            value: rv.scroll_y
            on_value: rv.scroll_y = self.value



<CYKParseWindow>:
    name: "cyk_parse"
    spacing:20
    padding:20
    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "right"

        RoundedLabel:
            id: bnf_label
            text: 'Converting to Binary Normal Form'
            font_size: bnf_label.height*0.25
            pos_hint: {'center_x':0.5 , 'y':0.87}
            size_hint: (.35, .10)
            halign: 'center'

        RoundedLabel:
            id: enter_string
            text: "Enter string: "
            font_size: enter_string.height*0.38
            pos_hint: {'x':0.15 , 'top':.15}
            size_hint: 0.16, 0.06
            halign: "center"

        TextInput:
            id: input_str
            text: ""
            halign: "left"
            pos_hint: {'x':0.35 , 'top':.15}
            size_hint: 0.3, 0.06
            multiline: False

        RoundedButton:
            text: "Parse"
            pos_hint: {'x':0.7 , 'top':.15}
            size_hint: 0.14, 0.06
            font_size: enter_string.height*0.38
            on_release:
                if input_str.text == "": app.input_string = "e"
                else: app.input_string = str(input_str.text)

                app.my_parser = Parser(app.my_bnf_cg, app.input_string)
                app.my_derivation = app.my_parser.find_parse()

                Factory.CYKPopup().open()
                input_str.text = ""



    ScrollView:
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True


        GridLayout:

            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                text: str(app.my_bnf_cg)
                pos_hint: {'x':0.1 , 'top':.85}
                size_hint_y: None
                text_size: self.width, None
                height: self.texture_size[1]



<ConvertCGToSAPDAWindow>:
    name: "convert_cg_to_sapda"
    spacing:50
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                app.root.current = "choose_cg_action"
                root.manager.transition.direction = "right"


    ScrollView:
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True


        GridLayout:

            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                id: rl
                size_hint_y: None
                pos_hint: {'x':0.1 , 'top':.80}
                #text_size: self.width, None
                height: self.texture_size[1]
                text: str(app.my_sapda)


<ChooseSAPDAActionWindow>:
    name: "choose_sapda_action"
    spacing:50
    padding:20

    canvas.before:
        Color:
            rgba: 97/255, 192/255, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        ReturnStartButton:
            on_release:
                app.root.current = "start"
                root.manager.transition.direction = "right"

        BackButton
            on_release:
                if app.my_sapda.user_defined: app.root.current = "make_sapda"
                else: app.root.current = "choose_sapda"
                root.manager.transition.direction = "right"

        RoundedLabel:
            id: enter_string
            text: "Enter string: "
            pos_hint: {'x':0.15 , 'top':.15}
            size_hint: 0.16, None
            halign: "center"

        TextInput:
            id: input_str
            text: ""
            halign: "left"
            pos_hint: {'x':0.35 , 'top':.15}
            size_hint: 0.3, 0.06
            multiline: False

        RoundedButton:
            text: "Compute"
            pos_hint: {'x':0.7 , 'top':.15}
            size_hint: 0.14, 0.06
            on_release:
                if input_str.text == "": app.input_string = "e"
                else: app.input_string = str(input_str.text)

                app.my_computation = Computation(app.my_sapda, app.input_string).run_machine()
                if len(app.my_computation) > 0: Factory.SAPDASuccessPopup().open()
                else: Factory.SAPDAFailPopup().open()

                #input_str.text = ""


    ScrollView:
        size_hint_y: .60
        pos_hint: {'x':0 , 'y':.25}
        do_scroll_x: False
        do_scroll_y: True


        GridLayout:

            size: root.width, root.height
            size_hint_x: None
            size_hint_y: None
            cols: 1
            height: self.minimum_height
            spacing:40
            padding:40

            RoundedLabel:
                size_hint_y: None
                pos_hint: {'x':0.1 , 'top':.85}
                text: str(app.my_sapda)
                text_size: self.width, None
                height: self.texture_size[1]



<SAPDASuccessPopup@Popup>
    spacing:50
    padding:50
    auto_dismiss: True
    size_hint: 0.9, 0.9
    title: "Word accepted!"
    #on_dismiss:
#        app.my_computation = ListProperty(None)


    BoxLayout:

        RecycleView:
            id: rv
            viewclass: 'DerivationLabel'
            data: [{'text': str(x)} for x in app.my_computation] if app.my_computation else [{'text': str(x)} for x in range(20)]
            RecycleGridLayout:
                cols: 1
                spacing:40
                padding:10
                size_hint: None, None
                pos_hint: {'top' : 0.95}
                #default_size: None, dp(20)
                #default_size_hint: 1, None
                height: self.minimum_height
                width: self.minimum_width
        Slider:
            size_hint_x: None
            width: root.width*0.1
            id: slider
            min: 0
            max: 1
            orientation: 'vertical'
            value: rv.scroll_y
            on_value: rv.scroll_y = self.value


<SAPDAFailPopup@Popup>
    spacing:50
    padding:50
    auto_dismiss: True
    size_hint: 0.4, 0.2
    title: "Word rejected!"
    on_dismiss:
        app.my_parser = ObjectProperty(None)
